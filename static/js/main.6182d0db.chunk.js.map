{"version":3,"sources":["Welcome.js","Track.js","Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Track","track","href","external_urls","spotify","target","className","style","width","src","album","images","url","name","artists","Spinner","role","App","useState","tracks","setTracks","React","status","setStatus","useEffect","fetch","then","res","json","data","console","log","map","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAEe,SAASA,IACpB,OACI,gCACI,0CACA,wICJG,SAASC,EAAT,GAAyB,IAATC,EAAQ,EAARA,MAC3B,OACI,mBAAGC,KAAMD,EAAME,cAAcC,QAASC,OAAO,SAASC,UAAU,qEAAqEC,MAAO,CAACC,MAAO,KAApJ,SACI,sBAAKD,MAAO,CAACC,MAAO,KAApB,UACI,qBAAKC,IAAKR,EAAMS,MAAMC,OAAO,GAAGC,IAAKN,UAAU,iBAC/C,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,OAAd,SAAsBL,EAAMY,OAC5B,uBAAOP,UAAU,aAAjB,SAA+BL,EAAMS,MAAMI,QAAQ,GAAGD,eCP3D,SAASE,IACpB,OACI,qBAAKT,UAAU,cAAf,SACI,qBAAKA,UAAU,sBAAsBU,KAAK,SAA1C,SACI,sBAAMV,UAAU,UAAhB,4BC8BDW,MA/Bf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACJC,EADI,KACIC,EADJ,OAEiBC,IAAMH,SAAS,WAFhC,mBAEJI,EAFI,KAEIC,EAFJ,KAaX,OATAC,qBAAU,WACNC,MAAM,2CAA2CC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAC1EC,QAAQC,IAAIF,GACZT,EAAUS,EAAKV,WAChBO,MAAK,WACJH,EAAU,gBAEf,IAEU,WAAVD,EACQ,cAACP,EAAD,IAIP,qBAAKT,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACKa,EAAOa,KAAI,SAAA/B,GAAK,OAAI,cAACD,EAAD,CAAsBC,MAAOA,GAAjBA,EAAMgC,iBChBhDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6182d0db.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <h1>Welcome!</h1>\r\n            <p>This is an awesome website that lets you generate playlists based on the sentiment in recent tweets.</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Track({track}) {\r\n    return (\r\n        <a href={track.external_urls.spotify} target=\"_blank\" className=\" mx-auto list-group-item list-group-item-action m-1 rounded border\" style={{width: 250}}>\r\n            <div style={{width: 200}}>\r\n                <img src={track.album.images[1].url} className=\"card-img-top\"></img>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"mb-1\">{track.name}</h5>\r\n                    <small className=\"text-muted\">{track.album.artists[0].name}</small>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"spinner-border mt-5\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport Welcome from './Welcome'\nimport Track from './Track'\nimport Spinner from './Spinner'\n\nfunction App() {\n    const [tracks, setTracks] = useState([])\n    const [status, setStatus] = React.useState(\"loading\")\n\n    useEffect(() => {\n        fetch('https://zach33.pythonanywhere.com/songs').then(res => res.json()).then(data => {\n            console.log(data)\n            setTracks(data.tracks)\n        }).then(() => {\n            setStatus(\"success\")\n        })\n    }, []);\n\n    if(status == \"loading\") {\n        return <Spinner />\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <Welcome />\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {tracks.map(track => <Track key={track.id} track={track} />)}\n                    </div>\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}