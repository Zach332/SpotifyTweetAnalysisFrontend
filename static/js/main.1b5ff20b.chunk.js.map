{"version":3,"sources":["App.js","Welcome.js","Track.js","Spinner.js","reportWebVitals.js","index.js","Routing.js"],"names":["App","useState","tracks","setTracks","setInput","code","React","status","setStatus","useEffect","params","toParams","window","location","search","replace","parseCode","data","console","log","axios","post","headers","Buffer","from","toString","then","token","catch","e","toQuery","client_id","response_type","redirect_uri","className","type","onClick","href","width","height","viewBox","fill","xmlns","fillRule","d","onSubmit","event","fetch","res","json","class","htmlFor","id","placeholder","onChange","target","value","map","track","Home","Track","external_urls","spotify","style","src","album","images","url","name","artists","Spinner","role","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","delimiter","keys","Object","reduce","str","key","index","query","length","split","values","param"],"mappings":"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","file":"static/js/main.1b5ff20b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Welcome from './Welcome'\nimport Track from './Track'\nimport Spinner from './Spinner'\nimport axios from 'axios'\nimport { toQuery, toParams } from './Routing'\n\nfunction App() {\n    const [tracks, setTracks] = useState([])\n    const [input, setInput] = useState(\"\")\n    const [code, setCode] = useState(\"\")\n    const [status, setStatus] = React.useState(\"none\")\n\n    const handleInputChange = (event) => {\n        const target = event.target;\n        setInput(target.value);\n    }\n    \n    useEffect(() => {\n        const params = toParams(window.location.search.replace(/^\\?/, ''))\n        parseCode(params)\n    }, [])\n\n    const parseCode = (data) => {\n        console.log(\"Parsing code from:\")\n        console.log(data)\n        if (!data.code) {\n            return;\n        }\n        // axios({\n        //     method: 'post',\n        //     url:'https://accounts.spotify.com/api/token',\n        //     params: {\n        //         client_id: \"12c531c380a24222bbb136f06402c9ee\",\n        //         client_secret: \"e4db5a70348744ab936d71ee719b57bb\",\n        //         code: code,\n        //         grant_type :'authorization_code',\n        //         redirect_uri: \"https://zach332.github.io/TweetSoundtrack/\"\n        //     },\n        //     headers: {\n        //         'Accept':'application/json',\n        //         'Content-Type': 'application/x-www-form-urlencoded'\n        //     },\n        //     auth: {\n        //         username: '12c531c380a24222bbb136f06402c9ee',\n        //         password: 'e4db5a70348744ab936d71ee719b57bb'\n        //     }\n        axios.post(\"https://accounts.spotify.com/api/token\", {\n            params: {\n               \"grant_type\": 'authorization_code',\n               \"code\": code,\n               \"redirect_uri\": \"https://zach332.github.io/TweetSoundtrack/\"\n            },\n             headers: {\n               \"Authorization\": \"Basic \" + Buffer.from(\"12c531c380a24222bbb136f06402c9ee\" + \":\" + \"e4db5a70348744ab936d71ee719b57bb\").toString(\"base64\"),\n               'Content-Type': 'application/x-www-form-urlencoded'\n             }           \n        }).then(token => {\n            console.log(token);\n        }).catch(e=> {\n            console.log(e);\n            console.log(e.data)\n        });    \n    }\n\n    const search = toQuery({\n        client_id: '12c531c380a24222bbb136f06402c9ee',\n        response_type: 'code',\n        redirect_uri: 'https://zach332.github.io/TweetSoundtrack/',\n    });\n    \n    const onCLick = () => {\n        window.location.href = 'https://accounts.spotify.com/authorize?'+search\n    }\n\n    const handleSubmit = (event) => {\n        setStatus(\"loading\")\n        fetch('https://zach33.pythonanywhere.com/songs').then(res => res.json())\n        .then(data => {\n            console.log(data)\n            setTracks(data.tracks)\n        }).then(() => {\n            setStatus(\"success\")\n        })\n    }\n\n    if(status == \"loading\") {\n        return <Spinner />\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <Welcome />\n                <div className=\"col-md-12 text-center\">\n                    <button type=\"btn btn-primary\" onClick={onCLick} className=\"btn btn-outline-primary btn-lg\">\n                        Login to Spotify\n                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-box-arrow-in-right\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fillRule=\"evenodd\" d=\"M6 3.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 0-1 0v2A1.5 1.5 0 0 0 6.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-8A1.5 1.5 0 0 0 5 3.5v2a.5.5 0 0 0 1 0v-2z\"></path>\n                            <path fillRule=\"evenodd\" d=\"M11.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H1.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\"></path>\n                        </svg>\n                    </button>\n                </div>\n                <div className=\"mx-auto\">\n                    <form className=\"py-4\" onSubmit={handleSubmit}>\n                        <div class=\"form-group row\">\n    \\                       <label htmlFor=\"content\">Twitter account</label>\n                            <input class=\"form-control\" id=\"content\" type=\"text\" placeholder=\"nytimes\" onChange={handleInputChange}></input>\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Generate playlist</button>\n                    </form>\n                </div>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {tracks.map(track => <Track key={track.id} track={track} />)}\n                    </div>\n                </div>\n            </header>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <h1>Welcome!</h1>\r\n            <p>This is an awesome website that lets you generate playlists based on the sentiment in recent tweets.</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Track({track}) {\r\n    return (\r\n        <a href={track.external_urls.spotify} target=\"_blank\" className=\" mx-auto list-group-item list-group-item-action m-1 rounded border\" style={{width: 250}}>\r\n            <div style={{width: 200}}>\r\n                <img src={track.album.images[1].url} className=\"card-img-top\"></img>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"mb-1\">{track.name}</h5>\r\n                    <small className=\"text-muted\">{track.album.artists[0].name}</small>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"spinner-border mt-5\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export function toQuery(params, delimiter = '&') {\r\n    const keys = Object.keys(params);\r\n  \r\n    return keys.reduce((str, key, index) => {\r\n      let query = `${str}${key}=${params[key]}`;\r\n  \r\n      if (index < (keys.length - 1)) {\r\n        query += delimiter;\r\n      }\r\n  \r\n      return query;\r\n    }, '');\r\n}\r\n\r\nexport function toParams(query) {\r\n    const q = query.replace(/^\\??\\//, '');\r\n  \r\n    return q.split('&').reduce((values, param) => {\r\n      const [key, value] = param.split('=');\r\n  \r\n      values[key] = value;\r\n  \r\n      return values;\r\n    }, {});\r\n}"],"sourceRoot":""}