{"version":3,"sources":["Welcome.js","Track.js","Spinner.js","App.js","Routing.js","reportWebVitals.js","index.js"],"names":["Home","style","paddingTop","paddingLeft","textAlign","fontSize","paddingBottom","Track","track","sentimentColor","href","external_urls","spotify","target","className","width","background","color","text","src","album","images","url","name","artists","Spinner","role","App","useState","tracks","setTracks","input","setInput","code","setCode","user","setUser","status","setStatus","description","setSentimentColor","useEffect","params","window","location","search","replace","split","reduce","values","param","key","value","delimiter","keys","Object","str","index","query","length","toQuery","client_id","response_type","scope","redirect_uri","type","onClick","height","viewBox","fill","xmlns","fillRule","d","paddingRight","onSubmit","event","axios","get","twitterAccount","then","response","data","recommendations","preventDefault","padding","htmlFor","id","placeholder","onChange","fontWeight","e","class","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53201ff4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <h1 style={{paddingTop:\"13%\", \r\n            paddingLeft:\"10%\", \r\n            textAlign:\"Left\", \r\n            fontSize:\"55px\"}}>\r\n                Spotify Tweet Analysis</h1>\r\n            <p style={{paddingLeft:\"30%\", \r\n            fontSize:\"35px\", \r\n            paddingBottom:\"12%\"}}> \r\n            Generate playlists based on tweetsüê¶ and dataüìà.</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Track({track, sentimentColor}) {\r\n    return (\r\n        <a href={track.external_urls.spotify} target=\"_blank\" className=\" mx-auto list-group-item list-group-item-action m-1 rounded border\" style={{width: 250, background: sentimentColor.background, color: sentimentColor.text}}>\r\n            <div style={{width: 200}}>\r\n                <img src={track.album.images[1].url} className=\"card-img-top\"></img>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"mb-1\">{track.name}</h5>\r\n                    <small><i>{track.album.artists[0].name}</i></small>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"spinner-border mt-5\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Welcome from './Welcome'\r\nimport Track from './Track'\r\nimport Spinner from './Spinner'\r\nimport axios from 'axios'\r\nimport { toQuery, toParams } from './Routing'\r\n\r\nfunction App() {\r\n    const [tracks, setTracks] = useState([])\r\n    const [input, setInput] = useState(\"nytimes\")\r\n    const [code, setCode] = useState(\"\")\r\n    const [user, setUser] = useState(\"Spotify user\")\r\n    const [status, setStatus] = useState(\"notAuthorized\")\r\n    const [sentimentColor, setSentimentColor] = useState([{background: \"beige\", text: \"black\", description: \"\"}])\r\n\r\n    const handleInputChange = (event) => {\r\n        const target = event.target;\r\n        setInput(target.value);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const params = toParams(window.location.search.replace(/^\\?/, ''))\r\n        if (params.code) {\r\n            setStatus(\"authorized\")\r\n            setCode(params.code)\r\n        }\r\n    }, [])\r\n\r\n    const search = toQuery({\r\n        client_id: '2d860b1bb2be4ca296384d7cef9b0301',\r\n        response_type: 'code',\r\n        scope: \"user-top-read\",\r\n        redirect_uri: 'https://zach332.github.io/TweetSoundtrack/',\r\n    });\r\n    \r\n    const onCLick = () => {\r\n        window.location.href = 'https://accounts.spotify.com/authorize?'+search\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        setStatus(\"loading\")\r\n        axios.get('https://zach33.pythonanywhere.com/songs', {\r\n            params: {\r\n                twitterAccount: input,\r\n                code: code\r\n            }\r\n        })\r\n        .then(response => {\r\n            setSentimentColor(response.data.sentimentColor)\r\n            setUser(response.data.spotify.user)\r\n            setTracks(response.data.spotify.recommendations.tracks)\r\n        }).then(() => {\r\n            setStatus(\"success\")\r\n        })\r\n        event.preventDefault()\r\n    }\r\n\r\n    if(status == \"loading\") {\r\n        return <Spinner />\r\n    }\r\n\r\n    if(status == \"notAuthorized\") {\r\n        return (\r\n            <div>\r\n                <Welcome />\r\n                <div className=\"col-md-12 text-center\" style={{paddingBottom: \"0%\"}}>\r\n                    <button type=\"btn btn-primary\" onClick={onCLick} className=\"btn btn-outline-primary btn-lg\">\r\n                        Login to Spotify\r\n                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-box-arrow-in-right\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fillRule=\"evenodd\" d=\"M6 3.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 0-1 0v2A1.5 1.5 0 0 0 6.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-8A1.5 1.5 0 0 0 5 3.5v2a.5.5 0 0 0 1 0v-2z\"></path>\r\n                            <path fillRule=\"evenodd\" d=\"M11.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H1.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\"></path>\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if(status == \"authorized\") {\r\n        return (\r\n            <div>\r\n                <div className=\"response\" style={{paddingLeft:\"10%\", \r\n                    paddingRight:\"10%\", \r\n                    textAlign:\"center\", \r\n                    fontSize:\"30px\", \r\n                    paddingBottom: \"5%\"\r\n                    }}>\r\n                    Thanks, we've grabbed your listening information. Now let us know a Twitter user you want to üé∂vibeüé∂ with.\r\n                </div>\r\n                <div className=\"mx-auto\" style={{paddingBottom: \"0%\"}}>\r\n                    <form className=\"py-4\" onSubmit={handleSubmit} style={{width: \"100%\", \r\n                    padding:\"30%\"}}>\r\n                        <div className=\"form-group row\">\r\n                            <label htmlFor=\"content\">Twitter account</label>\r\n                            <input className=\"form-control\" id=\"content\" type=\"text\" placeholder=\"nytimes\" onChange={handleInputChange}></input>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-lg mt-4\">Generate playlist</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"welcome\" style={{fontSize:\"50px\", fontWeight:\"bold\"}}>\r\n                Welcome, {user}.&nbsp;&nbsp;\r\n                <button type=\"btn btn-primary\" onClick={(e) => {\r\n                    e.preventDefault();\r\n                    window.location.href='http://spotify.com/logout';\r\n                    }} className=\"btn btn-outline-primary btn-lg\">\r\n                    Not you?\r\n                    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-box\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M6 3.5a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-8a.5.5 0 0 1-.5-.5v-2a.5.5 0 0 0-1 0v2A1.5 1.5 0 0 0 6.5 14h8a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-8A1.5 1.5 0 0 0 5 3.5v2a.5.5 0 0 0 1 0v-2z\"></path>\r\n                        <path fillRule=\"evenodd\" d=\"M11.854 8.354a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H1.5a.5.5 0 0 0 0 1h8.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3z\"></path>\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n            <div className=\"welcome\" style={{fontSize:\"25px\"}}>We've curated the below playlist for you based on the Twitter username you provided and your listening habits.</div>\r\n            <br></br>\r\n            <div className=\"container\">\r\n            <hr/>\r\n                <div className=\"row py-4\">\r\n                    <h2 className=\"col col-auto\">Sentiment color:</h2>\r\n                    <div class=\"col col-auto rounded-0 card\" style={{background:sentimentColor.background}}></div>\r\n                    <p className=\"col\">{sentimentColor.description}</p>\r\n                </div>\r\n                <div className=\"row\" style={{paddingBottom: \"50%\"}}>\r\n                    {tracks.map(track => <Track key={track.id} track={track} sentimentColor={sentimentColor} />)}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","export function toQuery(params, delimiter = '&') {\r\n    const keys = Object.keys(params);\r\n  \r\n    return keys.reduce((str, key, index) => {\r\n      let query = `${str}${key}=${params[key]}`;\r\n  \r\n      if (index < (keys.length - 1)) {\r\n        query += delimiter;\r\n      }\r\n  \r\n      return query;\r\n    }, '');\r\n}\r\n\r\nexport function toParams(query) {\r\n    const q = query.replace(/^\\??\\//, '');\r\n  \r\n    return q.split('&').reduce((values, param) => {\r\n      const [key, value] = param.split('=');\r\n  \r\n      values[key] = value;\r\n  \r\n      return values;\r\n    }, {});\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}